syncSimulPiDetailsForm(data: any): Promise<void> {
  return new Promise((resolve, reject) => {
    try {
      const form = store.simulPiDetailsForm();
      const simulPiDetails = data;

      patchState(store, {
        creditFileId: simulPiDetails.id,
        deviceId: simulPiDetails.deviceId,
        creditFileName: simulPiDetails.fileName,
      });

      form.patchValue({
        name: simulPiDetails.fileName,
        description: simulPiDetails.description,
        exchangeRate: simulPiDetails.exchangeRate,
        amount: simulPiDetails.amount,
        currency: simulPiDetails.currency,
      });
      form.markAsPristine();

      // Resolve the promise after everything is done
      resolve();
    } catch (error) {
      reject(error); // Reject if something went wrong
    }
  });
}


async ngOnInit(): Promise<void> {
  try {
    await this.#store.syncSimulPiDetailsForm(this.piSimulationGetQuery.data);
    await this.#store.getCalculationResult(this.deviceId() ?? 0);
    this.updateCalculationError();
  } catch (error) {
    console.error('Error occurred:', error);
  }

  // Other initializations
  void this.#store.loadPiSimulationReferentials();
  this.#store.syncExchangeRate(this.getExchangeRateQuery.data);
}
