using System.Net;
using System.Net.Http.Json;
using Xunit;

namespace CACIB.CREW.IntegrationTests.Features.Lgd.Simulation
{
    public class GetLgdProjectSimulationTests(CrewWebApplicationFactory<Program> factory) : IClassFixture<CrewWebApplicationFactory<Program>>
    {
        private readonly HttpClient _client;

        public GetLgdProjectSimulationTests(CrewWebApplicationFactory<Program> factory)
        {
            _client = factory.CreateClient(new WebApplicationFactoryClientOptions
            {
                AllowAutoRedirect = false
            });
        }

        [Fact]
        public async Task GetLgdProjectSimulation_ValidRequest_ReturnsSimulationData()
        {
            // Arrange
            long validId = 12345;

            // Act
            var response = await _client.GetAsync($"/api/lgd/project-simulation/{validId}");

            // Assert
            response.EnsureSuccessStatusCode();
            var result = await response.Content.ReadFromJsonAsync<LgdProjectSimulationResponse>();
            Assert.NotNull(result);
        }

        [Fact]
        public async Task GetLgdProjectSimulation_InvalidId_ReturnsNotFound()
        {
            // Arrange
            long invalidId = 999999;

            // Act
            var response = await _client.GetAsync($"/api/lgd/project-simulation/{invalidId}");

            // Assert
            Assert.Equal(HttpStatusCode.NotFound, response.StatusCode);
        }

        [Fact]
        public async Task GetLgdProjectSimulation_MissingId_ReturnsBadRequest()
        {
            // Act
            var response = await _client.GetAsync("/api/lgd/project-simulation");

            // Assert
            Assert.Equal(HttpStatusCode.BadRequest, response.StatusCode);
        }
    }
}
